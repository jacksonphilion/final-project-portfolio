---
title: "E155 Final Project Portfolio Website"
---

## Abstract

This project implements a near-real-time audio pitch detection system utilizing an electret microphone, amplifier circuits, microcontroller (MCU), FPGA, and a LCD display. The system is designed to capture audio signals and display the dominant pitch of the input. The audio signal is captured by the electret microphone, and amplified to a range suitable for the MCU’s Analog-to-Digital Converter (ADC) peripheral. This digital data is stored by the MCU’s DMA  peripheral in a dual buffer system. Once a buffer fills, the signal is processed through a Fast Fourier Transform (FFT) to detect the dominant frequency. The MCU communicates the frequency data to the FPGA through Serial Peripheral Interface (SPI). The FPGA converts the frequency to scientific pitch notation and drives an LCD display along a 10-line parallel interface. Finally, the LCD displays the pitch to the reader in scientific pitch notation (note-octave format).

## Video Demonstration

See a short demonstration of our full system below! Check out our full documentation page for a video demonstrating the full musical range of our device, as well as to see other images of our final device.

{{< video https://youtu.be/2jBXbJiRAg8 >}}

## Block Diagram

Our block diagram may be seen below. See our full documentation page for a more in depth exploration of our system and its implementation.

![](images/blockDiagram.png)

## Project Motivation

Not everyone has perfect pitch. That is to say, not everyone can hear a musical tone and tell which one is playing. Is that C3? B4? We have no clue! We want to be able to analyze the sound coming from a piano, a phone, a singer, or a MicroPs speaker. We want our system to be able to track the note in near real time, reading out to the user the note they're currently hearing or singing. We hope that by doing so, we can improve our own sense of pitch while helping future MicroPs students troubleshoot their digital audio creations in Lab 4.

Further, this project gave us practice with understanding and enabling key peripherals on the MCU – the DMA and ADC. Both of these are very common systems in embedded systems and digital design, enabling key functionalities within an MCU that are nearly irreplaceable. Additionally, Fourier Transforms are similarly essential to many audio or RF based projects. We wanted to put our systems engineering knowledge to use while learning more about how these theoretical algorithms get implemented into real hardware.

## Portfolio Contents

Your portfolio website should include the following items:

1. An overview/home page
2. A main documentation page
   - [ ] A description of the new hardware used by your project
   - [ ] Schematics for your system
   - [ ] A link to the Github repository containing the source code for your project
   - [ ] A complete bill of materials with item name, part number, quantity, unit price, and total price.
3. An FPGA design page
   - [ ] A brief summary of the FPGA design
   - [ ] A block diagram of the HDL you wrote
   - [ ] Any accompanying documentation necessary to describe its operation (e.g., state transition diagrams). You do not need to cover nitty gritty details like state transition or output logic tables.
4. An MCU design page
   - [ ] A brief summary of what the MCU does
   - [ ] Any diagrams needed to explain the flow of the MCU code
5. Results
   - [ ] A discussion of the overall performance of the final system
   - [ ] Any relevant simulation results or oscilloscope traces
   - [ ] Videos or photos of the final project or any intermediate build steps.
6. Team
   - [ ] A list of the team members with a one sentence bio and links to any relevant personal websites or social media presence. As a bonus, add photos here.

## Notes

- Do not upload video files into your Git repo! They are too big. Instead, upload to external video hosting sites (e.g., YouTube or Vimeo) and embed the HTML. You can directly paste the embed HTML code into your Quarto markdown.
- Think of your front page like a pitch. You're looking to give the reader a quick summary of what your project is and invite them to check it out in more detail.
- Host the portfolio website using Github pages. The most seamless way is to keep all the Quarto source docs inside a `docs` folder of your project Github repository and run `quarto publish` from there to render to Github pages. As a reminder, instructions on how to render can be found [here](https://quarto.org/docs/publishing/github-pages.html#publish-command).